==26479== Memcheck, a memory error detector
==26479== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==26479== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==26479== Command: ./part2.out input.txt
==26479== 
total 340
 8 part5.c
16 part5
20 part4.out
 8 part4.c
16 part4
20 part3.out
 8 part3_new.c
 4 part3.c
16 part3
20 part2.out
 4 part2.c
16 part2
16 part1.out
12 .part1.c.swp
 4 part1.c
 4 Makefile
 4 main.c
 4 logPart2.txt
 4 logPart1.txt
84 Lab 5 - Description.pdf
 4 iobound.c
16 iobound
 4 input.txt
 4 .git
 4 cpubound.c
12 cpubound
 4 ..
 4 .
I am iobound.c called by execv() Process: 26484 - Begining to write to file.
Process: 26484 - Finished.
I am cpubound.c called by execv() Process: 26485 - Begining calculation.
Process: 26485 - Finished.
Sending SIGUSR
Sending SIGSTOP
Sending SIGCONT
==26479== 
==26479== HEAP SUMMARY:
==26479==     in use at exit: 110 bytes in 13 blocks
==26479==   total heap usage: 15 allocs, 2 frees, 8,302 bytes allocated
==26479== 
==26479== 55 bytes in 10 blocks are definitely lost in loss record 2 of 2
==26479==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==26479==    by 0x4ED99B9: strdup (strdup.c:42)
==26479==    by 0x108F85: main (part2.c:67)
==26479== 
==26479== LEAK SUMMARY:
==26479==    definitely lost: 55 bytes in 10 blocks
==26479==    indirectly lost: 0 bytes in 0 blocks
==26479==      possibly lost: 0 bytes in 0 blocks
==26479==    still reachable: 55 bytes in 3 blocks
==26479==         suppressed: 0 bytes in 0 blocks
==26479== Reachable blocks (those to which a pointer was found) are not shown.
==26479== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26479== 
==26479== For counts of detected and suppressed errors, rerun with: -v
==26479== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
