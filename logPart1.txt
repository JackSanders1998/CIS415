==26473== Memcheck, a memory error detector
==26473== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==26473== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==26473== Command: ./part1.out input.txt
==26473== 
total 336
 8 part5.c
16 part5
20 part4.out
 8 part4.c
16 part4
20 part3.out
 8 part3_new.c
 4 part3.c
16 part3
20 part2.out
 4 part2.c
16 part2
16 part1.out
12 .part1.c.swp
 4 part1.c
 4 Makefile
 4 main.c
 4 logPart1.txt
84 Lab 5 - Description.pdf
 4 iobound.c
16 iobound
 4 input.txt
 4 .git
 4 cpubound.c
12 cpubound
 4 ..
 4 .
I am cpubound.c called by execv() Process: 26476 - Begining calculation.
Process: 26476 - Finished.
I am iobound.c called by execv() Process: 26475 - Begining to write to file.
Process: 26475 - Finished.
==26473== 
==26473== HEAP SUMMARY:
==26473==     in use at exit: 110 bytes in 13 blocks
==26473==   total heap usage: 14 allocs, 1 frees, 4,206 bytes allocated
==26473== 
==26473== 33 bytes in 7 blocks are definitely lost in loss record 2 of 3
==26473==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==26473==    by 0x4ED99B9: strdup (strdup.c:42)
==26473==    by 0x108BDD: main (part1.c:55)
==26473== 
==26473== LEAK SUMMARY:
==26473==    definitely lost: 33 bytes in 7 blocks
==26473==    indirectly lost: 0 bytes in 0 blocks
==26473==      possibly lost: 0 bytes in 0 blocks
==26473==    still reachable: 77 bytes in 6 blocks
==26473==         suppressed: 0 bytes in 0 blocks
==26473== Reachable blocks (those to which a pointer was found) are not shown.
==26473== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26473== 
==26473== For counts of detected and suppressed errors, rerun with: -v
==26473== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
